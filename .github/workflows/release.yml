name: Publish a Release 
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  validate-yaml:
    runs-on: ubuntu-latest
    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
      with:
        egress-policy: audit

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        submodules: true
    - name: Set up Python 3.13
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: 3.13
    - name: Install Poetry
      run: curl -sSL https://install.python-poetry.org | python -
    - name: Install dependencies with Poetry
      run: poetry install
    - name: Run YAML Checks
      run: poetry run python bin/validate.py -v

  generate-site:
    runs-on: ubuntu-latest
    needs: validate-yaml
    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
      with:
        egress-policy: audit

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        submodules: true
        token: ${{ secrets.PUSH_TOKEN }}
    - name: Set up Python 3.13
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: 3.13
    - name: Install Poetry
      run: curl -sSL https://install.python-poetry.org | python -
    - name: Install dependencies with Poetry
      run: poetry install
    - name: Run Site Generation 
      run: poetry run python bin/site.py -v
    - name: Run Site Generation 
      run: poetry run python bin/gen-files.py

  build-hugo:
    runs-on: ubuntu-latest
    needs: generate-site
    env:
      HUGO_VERSION: 0.147.9
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
          token: ${{ secrets.PUSH_TOKEN }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0
      - name: Install Node.js dependencies
        run: |
          cd loldrivers.io/
          [[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true
      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          cd loldrivers.io/
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: ./loldrivers.io/public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-hugo
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5

  create_release:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
      with:
        egress-policy: audit

    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        lfs: true
  
    - name: Build drivers.zip
      run: |
        mkdir -p build/metadata
        mkdir -p build/drivers
        cp -r yaml/ build/metadata
        cp -r drivers/ build/drivers
        cd build
        zip -r drivers.zip metadata/ drivers/
  
    - name: Create Release and Upload drivers.zip
      uses: step-security/action-gh-release@2677a32b1ab8b24324ede3be9da4e1d8c3f686ee # v2.3.2
      with:
        files: build/drivers.zip
      env:
        GITHUB_TOKEN: ${{ secrets.PUSH_TOKEN }}
        
        

